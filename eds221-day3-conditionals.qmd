---
title: "EDS 221 Day 3 Practice"
format: html
editor_options: 
  chunk_output_type: console
---

```{r}

pinyon_pine <- 14
lodgepole_pine <- 46

#here's some logical expressions
pinyon_pine == 10
pinyon_pine < lodgepole_pine

pinyon_pine != 25



```

```{r}

#conditionals 

burrito <- 2.4
#write short if statement

if(burrito > 2){
  print("I love burritos!")
}


```



```{r}
pika <- 60

if(pika > 60){
  print("mega pika!")
} else
  print("normal pika")


```


```{r}
marmot <- -4.8
if(marmot < 0.5) {
  print("a small marmot")
} else if (marmot >= 0.5 & marmot <3) {
  print("a medium marmot") 
} else
  print("a large marmot")


```

```{r}
library(stringr)

my_ships <- c("Millenium Falcon",
              "X-Wing",
              "Tie-Fighter",
              "Death Start")

str_detect(my_ships, pattern = "r")


```


```{r}
phrase <- "I love burritos"

if (str_detect(phrase, "love")) {
  print("burrito fan")
}

```

```{r}

species <- "mouse"

switch(species,
       "cat" = print("meow"),
       "dog" = print("woof"),
       "mouse" = print("squeak")
       )

if(species == "mouse"){
  print("squeak")
} else if(species== "cat"){
  print("meow")
} else if(species == "dog"){
  print("woof")
}
#remember == instead of = (== is asking if that's true)

```


#for loops ----
```{r}
dog_names <- c("teddy", "khora", "banjo", "waffle")

for(pupster in dog_names){
  print(paste0("My dog's name is ", pupster, "."))
}

#i stands for each individual variable in dog_names 

for(i in 1:4){
  print(i)
}

data <- data.frame(x=1:4)

for(i in 1:4){
  print(data[i,])
}


data2 <- data.frame(x=letters[1:4])

for(i in 1:4){
  print(data2[i,])
}

#for loops the same as

#row1 <- data[1,]
#print(row1)
#row2 <- data[2,]
#print(row2)

#but for loops is more efficient
```

```{r}
#more for loop examples

mass <- seq(from = 0, to = 3, by = .5)
mass

mass_1 <- mass[1]
new_value <- mass_1 +2
print(new_value)

#to put into for loop

for (i in mass) {
  new_value <- i + 2
  print(new_value)
}

```




```{r}
mass <- seq(from = 0, to = 3, by = .5)

for(i in seq_along(mass)) {
  new_value <- mass[] + 2
  print(new_value)
}

new_value

```



```{r}
tree_height <- c(1,2,6,10)
i <- 1
tree_height[i] + tree_height[1 + 1]

----


tree_height <- c(1,2,6,10)

 # both do the same thing
for(i in 1:length(tree_height))
for(i in sq_along(tree_height))
  
tree_height[i] + tree_height[1 + 1]


for(i in seq_along(tree_height)) {
  new_value <- tree_height[i] + tree_height[i + 1]
  print(new_value)
}
 


```


```{r}
#for loops with conditionals ----

animal <- c("cat", "dog", "dog", "zebra", "dog")

if (animal[i]) == "dog"{
  print("I love dogs!")
} else
  print("this is not a dog :(")

#make it into for loop
for (i in seq_along(animal)) {
  if (animal[i] == "dog") {
  print("I love dogs!")
} else
  print("this is not a dog")
}



```



```{r}
#more conditional for loops!

species <- c("dog", "elephant", "goat", "dog", "dog", "elephant")

age_human <- c(3, 8, 4, 6, 12, 18)


#conditional expression first

if (species[1] == "dog") {
  animal_age <- age_human[1] * 7
} else if (species[1] == "elephant"){
  animal_age <- age_human[1] * .88
} else if (species[1] == "goat") {
  animal_age<- age_human * 4.7
}

# make it a for loop

for (i in seq_along(species)) {
  if (species[i] == "dog") {
  animal_age <- age_human[i] * 7
} else if (species[i] == "elephant"){
  animal_age <- age_human[i] * .88
} else if (species[i] == "goat") {
  animal_age<- age_human[i] * 4.7
}  
  print(animal_age)
}


```




```{r}
#storing for loop output ----




#create an empty vector for animal ages
rm(list=ls())

species <- c("dog", "elephant", "goat", "dog", "dog", "elephant")

animal_ages <- vector(mode = "numeric", length = length(species))


age_human <- c(3, 8, 4, 6, 12, 18)


for (i in seq_along(species)) {
  if (species[i] == "dog") {
  animal_age <- age_human[i] * 7
} else if (species[i] == "elephant"){
  animal_age <- age_human[i] * .88
} else if (species[i] == "goat") {
  animal_age<- age_human[i] * 4.7
}  
  animal_ages[i] <- animal_age
}

print(animal_ages)


```


```{r}
# another storing output example ----

tigers <- c(29,34,82)
lions <- c(2,18,6)

# make vector to store in

big_cats <- vector(mode = "numeric", length = length(tigers))

#make body of for loops first

for (i in seq_along(tigers)) {
  total_cats <- tigers[i] + lions[i]
  big_cats[i] <- total_cats
}




```

